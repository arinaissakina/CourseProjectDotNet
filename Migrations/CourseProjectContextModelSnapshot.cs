// <auto-generated />
using System;
using CourseProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseProject.Migrations
{
    [DbContext(typeof(CourseProjectContext))]
    partial class CourseProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CourseProject.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CourseProject.Models.ProjectMember", b =>
                {
                    b.Property<long>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("CourseProject.Models.SpecialityUser", b =>
                {
                    b.Property<long>("SpecialtyId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpecialtyId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("SpecialityUsers");
                });

            modelBuilder.Entity("CourseProject.Models.Specialty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("CourseProject.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("AllUsers");
                });

            modelBuilder.Entity("CourseProject.Models.Project", b =>
                {
                    b.HasOne("CourseProject.Models.User", "Owner")
                        .WithMany("ProjectOwner")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CourseProject.Models.ProjectMember", b =>
                {
                    b.HasOne("CourseProject.Models.User", "Member")
                        .WithMany("ProjectMember")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.Models.Project", "Project")
                        .WithMany("ProjectMembers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CourseProject.Models.SpecialityUser", b =>
                {
                    b.HasOne("CourseProject.Models.Specialty", "Specialty")
                        .WithMany("SpecialityUsers")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseProject.Models.User", "User")
                        .WithMany("Specialties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseProject.Models.Specialty", b =>
                {
                    b.HasOne("CourseProject.Models.Project", null)
                        .WithMany("Specialties")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("CourseProject.Models.Project", b =>
                {
                    b.Navigation("ProjectMembers");

                    b.Navigation("Specialties");
                });

            modelBuilder.Entity("CourseProject.Models.Specialty", b =>
                {
                    b.Navigation("SpecialityUsers");
                });

            modelBuilder.Entity("CourseProject.Models.User", b =>
                {
                    b.Navigation("ProjectMember");

                    b.Navigation("ProjectOwner");

                    b.Navigation("Specialties");
                });
#pragma warning restore 612, 618
        }
    }
}
